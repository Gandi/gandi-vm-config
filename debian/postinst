#!/bin/sh
# postinst script for gandi-hosting-vm

# we switch the virtual disk management to autofs/automount and
# we need to disable the udev rules with the python script
disable_udev_disk_rules() {
	for f_ in /lib/udev/rules.d/gandi.disabled \
				/lib/udev/rules.d/gandi.rules \
				/etc/udev/rules.d/86-gandi.rules; do
		if [ -e "${f_}" ]; then
			if ! grep -q '^#disabled#.*manage_data_disk.py' "${f_}"; then
				sed -i -e "s/^\(.*manage_data_disk.py.*\)$/#disabled# \1/g" "${f_}" > /dev/null 2>&1
			fi
		fi
	done
	udevadm control --reload
}

enable_autofs_gandi() {
	f_='/etc/auto.master.d/gandi.autofs'
	[ -e "${f_}" ] || return 1
	sed -i -e 's,^[\s\t]*#\(.*\),\1,g' "${f_}" > /dev/null 2>&1
	return $?
}

disable_autofs_gandi() {
	f_='/etc/auto.master.d/gandi.autofs'
	[ -e "${f_}" ] || return 1
	sed -i -e 's,^/srv[\s\t ]*/etc/auto.gandi,#/srv\t/etc/auto.gandi,g' "${f_}" > /dev/null 2>&1
	return $?
}

autofs_installed() {
	dpkg-query -s autofs > /dev/null 2>&1
	return $?
}

udev_handle_disk() {
	for f_ in /lib/udev/rules.d/gandi.disabled \
				/lib/udev/rules.d/gandi.rules \
				/etc/udev/rules.d/86-gandi.rules; do
		if [ -e "${f_}" ]; then
			if grep -E -q '^[^#].*manage_data_disk.py' ${f_} > /dev/null 2>&1; then
				return 0
			fi
		fi
	done
	return 1
}

autofs_handle_srv() {
	list_files=$(ls -1 /etc/auto.master /etc/auto.master.d/*.autofs | grep -v gandi.autofs | xargs)
	grep -q ^/srv ${list_files} > /dev/null 2>&1
	return $?
}

case "$1" in
	configure|upgrade)

		# We create ssh host key if not present.
		if [ -z "$(find /etc/ssh/ -name 'ssh_host_*_key' -print -quit)" ]; then
			LC_ALL=C LANG=C /usr/sbin/dpkg-reconfigure openssh-server -f noninteractive -p critical
		fi
	
		# cleaning files from old installation
		if [ -d /etc/gandi/plugins-available ]; then
			rm -rf /etc/gandi/plugins-available || true
		fi
		if [ -d /etc/gandi/plugins-enabled ]; then
			rm -rf /etc/gandi/plugins-enabled || true
		fi

		# LSB
		lsb=''
		if command -v lsb_release > /dev/null; then
			lsb=$(command -v lsb_release)
		fi

		lsb_release=''
		lsb_distrib=''
		if [ ! -z "${lsb}" ]; then
			lsb_release=$("${lsb}" -rs)
			lsb_distrib=$("${lsb}" -is)
		fi

		# Debian stretch
		if [ 'Debian' = "${lsb_distrib}" ] || [ 'debian' = "${lsb_distrib}" ]; then
			if [ $(echo "${lsb_release}" | cut -d'.' -f1) -gt 8 ]; then
				disable_udev_disk_rules
			fi
		fi

		# Ubuntu bionic
		if [ 'Ubuntu' = "${lsb_distrib}" ] || [ 'ubuntu' = "${lsb_distrib}" ]; then
			if [ $(echo "${lsb_release}" | cut -d'.' -f1) -gt 17 ]; then
				disable_udev_disk_rules
			fi
		fi

		# the system uses autofs and customer rules handle /srv
		if autofs_installed && autofs_handle_srv; then
			disable_udev_disk_rules
			disable_autofs_gandi
		fi

		# the system uses autofs and udevd is handling the additional disks
		if autofs_installed && udev_handle_disk; then
			disable_autofs_gandi
		fi

		# the system use autofs and udev rule is disabled
		if autofs_installed && ! udev_handle_disk; then
			enable_autofs_gandi
		fi

		# the system uses udevd
		if ! autofs_installed; then
			disable_autofs_gandi
		fi

		# Avoid two files with the same set of udev rules.
		# XXX TODO We need a proper migration.
		if [ -f /lib/udev/rules.d/gandi.rules ]; then
			mv -f /lib/udev/rules.d/gandi.rules /lib/udev/rules.d/gandi.disabled
			sed -i -e 's/^/#disabled#/g' /lib/udev/rules.d/gandi.disabled
			udevadm control --reload
		fi

		# obsolete and old plugins
		rm -f /etc/gandi/plugins.d/04-config_network
		rm -f /etc/gandi/plugins.d/06-vm-fix-cron
		rm -f /etc/gandi/plugins.d/05-vm-fix-ext3
		rm -f /etc/gandi/plugins.d/07-vm-fix-gandikey
		rm -f /etc/gandi/plugins.d/07-timezone
		rm -f /etc/gandi/plugins.d/09-config_timezone
		rm -f /etc/gandi/plugins-libs.sh

		# obsolete plugins in 1.2 version
		rm -f /etc/gandi/plugins.d/04-config_local_network
		rm -f /etc/gandi/plugins.d/05-config_hostname
		rm -f /etc/gandi/plugins.d/06-config_nameserver
		rm -f /etc/gandi/plugins.d/08-config_user_group
		rm -f /etc/gandi/plugins.d/12-vm-fix-umask
		rm -f /etc/gandi/plugins.d/15-misc
		rm -f /etc/gandi/dhclient-exit-hooks
		rm -f /etc/gandi/dhcp-postconf
		rm -f /etc/gandi/dhcp-hostname
		rm -f /etc/gandi/dhcp-hostname-static-net
		rm -rf /etc/gandi/bootstrap.d

		# obsolete plugins in gandi-hosting-vm2 version
		rm -rf /etc/gandi/plugins.d/00-config_swap
		rm -rf /etc/gandi/plugins.d/10-config_sysctl
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
		# nothing
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

#DEBHELPER#

exit 0
